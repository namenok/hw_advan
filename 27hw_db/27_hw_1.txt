1.Переваги ORM
- робота з python-об'єктами замість таблиць.
- автоматизація (створення багатьох рутинних деталей автоматично).
- підвищена продуктивність (прискорення розробки за рахунок меншого написання SQL-запитів).
- зручність підтримки (менше коду - менше SQL-ін'єкцій).
- можливість легкого переходу між різними типами баз даних.
- працювати з величезними масивами даних, при тому, що ці дані можуть бути з різних типів баз даних.

2. Недоліки
-не містить універсальних методів, якщо запит має бути дуже конкретизований, за багатьма умовами фільтрами, функціями,
додатковим сортуванням тощо - то краще використати SQL-запит.
-Django ORM не відповідає за забезпечення інтерфейсу для написання власного користувацького SQL. Інтерфейс
базується на визначеній вами моделі. З таким підходом дійсно легше почати, але з іншого боку — з ORM деякі запити
стануть складніші в реалізації чи навіть неможливі.